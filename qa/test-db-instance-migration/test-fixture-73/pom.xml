<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.finture.bpm.qa.upgrade</groupId>
    <artifactId>flowee-bpms-qa-db-instance-migration</artifactId>
    <version>0.5.1</version>
  </parent>

  <artifactId>flowee-bpms-qa-upgrade-test-fixture-73</artifactId>
  <packaging>jar</packaging>
  <name>Flowee BPMS Platform - QA - upgrade - instance migration - test fixture - 7.3.0</name>

  <!-- Due to https://issues.apache.org/jira/browse/MRELEASE-799 the release test fails when
     the version is managed in a property. Thus we use explicit versions everywhere. -->
  <properties>
<!--     <flowee-bpms.version.current>7.3.0</flowee-bpms.version.current> -->
    <flowee-bpms.version.previous>7.2.0</flowee-bpms.version.previous>

    <version.h2>${version.h2-v1}</version.h2>
    <version.mariadb>${version.mariadb-v1}</version.mariadb>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.finture.bpm</groupId>
        <artifactId>flowee-bpms-bom</artifactId>
        <version>7.3.0</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.finture.bpm</groupId>
      <artifactId>flowee-bpms-engine</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.finture.bpm.qa.upgrade</groupId>
      <artifactId>flowee-bpms-qa-upgrade-scenario-util</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>instance-migration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>create-sql-script-stubs</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <target>

                    <!-- create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db
                      upgrades (yet) for a particular release ) -->

                    <mkdir dir="${project.build.directory}/scripts-current/sql/upgrade/" />

                    <touch file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql" />
                    <touch file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql" />

                    <!-- patches for current minor version if any -->
                    <!-- 7.2.4 to 7.2.5 -->
                    <touch file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_patch_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}.4_to_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}.5.sql" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>copy-old-mysql-scripts-for-mariadb</id>
                <phase>generate-test-resources</phase>
                <configuration>
                  <target>

                    <!-- copy mysql upgrade scripts from 7.3 for mariadb as with 7.5 mariadb has own scripts -->
                    <!-- TODO: if 7.2 patch scripts for mysql are created they probably also have to be copied for mariadb -->

                    <copy file="${project.build.directory}/scripts-current/sql/upgrade/mysql_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql" tofile="${project.build.directory}/scripts-current/sql/upgrade/mariadb_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql" overwrite="true" />

                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- provide sql scripts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-current-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>com.finture.bpm.distro</groupId>
                      <artifactId>flowee-bpms-sql-scripts</artifactId>
                      <version>7.3.0</version>
                      <type>test-jar</type>
                      <outputDirectory>${project.build.directory}/scripts-current</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- parse version properties from qa/pom.xml -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>parse-current-version</id>
                <goals>
                  <goal>parse-version</goal>
                </goals>
                <configuration>
                  <propertyPrefix>flowee-bpms.current</propertyPrefix>
                  <versionString>7.3.0</versionString>
                </configuration>
              </execution>
              <execution>
                <id>parse-old-version</id>
                <goals>
                  <goal>parse-version</goal>
                </goals>
                <configuration>
                  <propertyPrefix>flowee-bpms.previous</propertyPrefix>
                  <versionString>${flowee-bpms.version.previous}</versionString>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <configuration>
              <skip>${skip-test-fixture}</skip>
            </configuration>
            <executions>
              <execution>
                <id>patch-previous-schema</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now patch old version of the schema -->

                    <!-- 7.2.4 to 7.2.5 -->
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_patch_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}.4_to_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}.5.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>upgrade-db</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now perform the schema migrations -->
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${flowee-bpms.previous.majorVersion}.${flowee-bpms.previous.minorVersion}_to_${flowee-bpms.current.majorVersion}.${flowee-bpms.current.minorVersion}.sql</srcFile>
                    <!-- delete global grant authorizations created with the engine script -->
                    <srcFile>src/main/resources/com/finture/bpm/qa/upgrade/alldb_engine_delete_global_auth.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
              <cleanupDaemonThreads>false</cleanupDaemonThreads>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>false</includePluginDependencies>
              <classpathScope>test</classpathScope>
              <skip>${skip-test-fixture}</skip>
            </configuration>
            <executions>
              <execution>
                <id>create-test-fixture</id>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>process-test-classes</phase>
                <configuration>
                  <mainClass>com.finture.bpm.qa.upgrade.TestFixture</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
